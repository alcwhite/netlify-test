const cookie = require("cookie");
const { EleventyServerless } = require("@11ty/eleventy");
const { OAuth, tokens, getCookie } = require("../util/auth.js");

// Explicit dependencies for the bundler from config file and global data.
// The file is generated by the Eleventy Serverless Bundler Plugin.
require("./eleventy-bundler-modules.js");

const precompiledCollections = require("./_generated-serverless-collections.json");

const handler = async (event) => {
  let authToken;
  let provider;
  let user;
  let isUserValid;
  if(event.headers && event.headers.cookie) {
    let cookies = cookie.parse(event.headers.cookie);
    if(cookies._11ty_oauth_token) {
      authToken = tokens.decode(cookies._11ty_oauth_token);
    }
    if(cookies._11ty_oauth_provider) {
      provider = cookies._11ty_oauth_provider;
    }
    if (cookies.user) {
      user = cookies.user;
    }
    isUserValid = cookies.isUserValid;
  }

  let authError;
  try {
    let oauth = new OAuth(provider);
    if (!user) {
      user = await oauth.getUser(authToken);
    }
    if (!isUserValid) {
      isUserValid = await oauth.getIsUserValid(authToken, user);
    }
  } catch(e) {
    authError = e;
  }

  let elev = new EleventyServerless("secure", {
    path: new URL(event.rawUrl).pathname,
    query: event.queryStringParameters,
    functionsDir: "./netlify/functions/",
    precompiledCollections,
    config: (eleventyConfig) => {
      eleventyConfig.addGlobalData("context", process.env.CONTEXT)
      if (user) {
        eleventyConfig.addGlobalData("user", user);
        eleventyConfig.addGlobalData("isUserValid", isUserValid)
        eleventyConfig.addGlobalData("pageNav", precompiledCollections.pageNav)
      }
    }
  });

  try {
    let [page] = await elev.getOutput();

    // If you want some of the data cascade available in `page.data`, use `eleventyConfig.dataFilterSelectors`.
    // Read more: https://www.11ty.dev/docs/config/#data-filter-selectors

    return {
      statusCode: 200,
      headers: {
        "Content-Type": "text/html; charset=UTF-8",
      },
      body: page.content,
    };
  } catch (error) {
    // Only console log for matching serverless paths
    // (otherwise you’ll see a bunch of BrowserSync 404s for non-dynamic URLs during --serve)
    if (elev.isServerlessUrl(event.path)) {
      console.log("Serverless Error:", error);
    }

    return {
      statusCode: error.httpStatusCode || 500,
      body: JSON.stringify(
        {
          error: error.message,
        },
        null,
        2
      ),
    };
  }
}

// Choose one:
// * Runs on each request: AWS Lambda, Netlify Function
// * Runs on first request only: Netlify On-demand Builder
//    1. Don’t forget to `npm install @netlify/functions`
//    2. Also use `redirects: "netlify-toml-builders"` in your config file’s serverless bundler options:
//       https://www.11ty.dev/docs/plugins/serverless/#bundler-options

exports.handler = handler;

//const { builder } = require("@netlify/functions");
//exports.handler = builder(handler);
